{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "hai-covid19-adf"
		},
		"ls_ablob_haicovid19blob_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'ls_ablob_haicovid19blob'"
		},
		"ls_adls_haicovid19datalake_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'ls_adls_haicovid19datalake'"
		},
		"ls_databricks_covid19_accessToken": {
			"type": "secureString",
			"metadata": "Secure string for 'accessToken' of 'ls_databricks_covid19'"
		},
		"ls_sql_covid19_db_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'ls_sql_covid19_db'"
		},
		"ls_adls_haicovid19datalake_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://haicovid19datalake.dfs.core.windows.net/"
		},
		"ls_databricks_covid19_properties_typeProperties_existingClusterId": {
			"type": "string",
			"defaultValue": "0328-075324-52jkzird"
		},
		"ls_http_ecdc_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://raw.githubusercontent.com/"
		},
		"ls_sql_covid19_db_properties_typeProperties_server": {
			"type": "string",
			"defaultValue": "hai-covid19-svr.database.windows.net"
		},
		"ls_sql_covid19_db_properties_typeProperties_database": {
			"type": "string",
			"defaultValue": "covid19-db"
		},
		"ls_sql_covid19_db_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "adm"
		},
		"tr_event_blobCreated_properties_typeProperties_scope": {
			"type": "string",
			"defaultValue": "/subscriptions/1c8aff52-99ce-48e2-8271-884e1319218f/resourceGroups/haicovid19/providers/Microsoft.Storage/storageAccounts/haicovid19blob"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/pl_execute_population_pipeline')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Execute Ingest Population",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "pl_ingest_population",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "Execute Process Population",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Execute Ingest Population",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "pl_process_population",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "execute"
				},
				"annotations": [],
				"lastPublishTime": "2025-03-28T08:44:58Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/pl_ingest_population')]",
				"[concat(variables('factoryId'), '/pipelines/pl_process_population')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_ingest_ecdc_data')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Lookup ECDC File List",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"dataset": {
								"referenceName": "ds_ablob_ecdcFileList",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "Iterate through File List",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Lookup ECDC File List",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Lookup ECDC File List').output.value",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Copy ECDC data",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "HttpReadSettings",
												"requestMethod": "GET"
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "ds_http_ecdc",
											"type": "DatasetReference",
											"parameters": {
												"relativeUrl": {
													"value": "@item().sourceRelativeUrl",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "ds_adls_raw_ecdc",
											"type": "DatasetReference",
											"parameters": {
												"fileName": {
													"value": "@item().sinkFileName",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "ingest"
				},
				"annotations": [],
				"lastPublishTime": "2025-03-28T08:40:59Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_ablob_ecdcFileList')]",
				"[concat(variables('factoryId'), '/datasets/ds_http_ecdc')]",
				"[concat(variables('factoryId'), '/datasets/ds_adls_raw_ecdc')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_ingest_population')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Check if file exists",
						"type": "Validation",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "ds_ablob_population",
								"type": "DatasetReference",
								"parameters": {}
							},
							"timeout": "0.00:00:05",
							"sleep": 1,
							"minimumSize": 1
						}
					},
					{
						"name": "Check if column count is correct",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "Get Population Metadata",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@equals(activity('Get Population Metadata').output.columnCount,13)",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "Copy Population Data",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "AzureBlobStorageReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "ds_ablob_population",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "ds_adls_raw_population",
											"type": "DatasetReference",
											"parameters": {}
										}
									]
								}
							]
						}
					},
					{
						"name": "Get Population Metadata",
						"type": "GetMetadata",
						"dependsOn": [
							{
								"activity": "Check if file exists",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "ds_ablob_population",
								"type": "DatasetReference",
								"parameters": {}
							},
							"fieldList": [
								"columnCount"
							],
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "DelimitedTextReadSettings"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "ingest"
				},
				"annotations": [],
				"lastPublishTime": "2025-03-28T08:40:59Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_ablob_population')]",
				"[concat(variables('factoryId'), '/datasets/ds_adls_raw_population')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_load_casesDeaths')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy Cases and Deaths",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"wildcardFileName": "*",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": "TRUNCATE TABLE covid_reporting.cases_and_deaths",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "country",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "country",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "country_code_2_digit",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "country_code_2_digit",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "country_code_3_digit",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "country_code_3_digit",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "population",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "population",
											"type": "Int64",
											"physicalType": "bigint"
										}
									},
									{
										"source": {
											"name": "confirmed_cases_count",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "cases_count",
											"type": "Int64",
											"physicalType": "bigint"
										}
									},
									{
										"source": {
											"name": "deaths_count",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "deaths_count",
											"type": "Int64",
											"physicalType": "bigint"
										}
									},
									{
										"source": {
											"name": "reported_date",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "reported_date",
											"type": "DateTime",
											"physicalType": "date"
										}
									},
									{
										"source": {
											"name": "source",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "source",
											"type": "String",
											"physicalType": "varchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "ds_adls_processed_ecdc_casesDeaths",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "ds_sql_casesDeaths",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "load"
				},
				"annotations": [],
				"lastPublishTime": "2025-03-28T08:40:59Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_adls_processed_ecdc_casesDeaths')]",
				"[concat(variables('factoryId'), '/datasets/ds_sql_casesDeaths')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_load_hospitalAdmissionsDaily')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy Hospital Admissions Daily",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"wildcardFileName": "*",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": "TRUNCATE TABLE covid_reporting.hospital_admissions_daily",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "country",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "country",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "country_code_2_digit",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "country_code_2_digit",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "country_code_3_digit",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "country_code_3_digit",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "population",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "population",
											"type": "Int64",
											"physicalType": "bigint"
										}
									},
									{
										"source": {
											"name": "reported_date",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "reported_date",
											"type": "DateTime",
											"physicalType": "date"
										}
									},
									{
										"source": {
											"name": "hospital_occupancy_count",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "hospital_occupancy_count",
											"type": "Int64",
											"physicalType": "bigint"
										}
									},
									{
										"source": {
											"name": "icu_occupancy_count",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "icu_occupancy_count",
											"type": "Int64",
											"physicalType": "bigint"
										}
									},
									{
										"source": {
											"name": "source",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "source",
											"type": "String",
											"physicalType": "varchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "ds_adls_processed_ecdc_hospitalAdmissionsDaily",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "ds_sql_hospitalAdmissionsDaily",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "load"
				},
				"annotations": [],
				"lastPublishTime": "2025-03-28T08:40:59Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_adls_processed_ecdc_hospitalAdmissionsDaily')]",
				"[concat(variables('factoryId'), '/datasets/ds_sql_hospitalAdmissionsDaily')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_load_testing')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy Testing",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"wildcardFileName": "*",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": "TRUNCATE TABLE covid_reporting.testing",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "country",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "country",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "country_code_2_digit",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "country_code_2_digit",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "country_code_3_digit",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "country_code_3_digit",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "reported_year_week",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "year_week",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "week_start_date",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "week_start_date",
											"type": "DateTime",
											"physicalType": "date"
										}
									},
									{
										"source": {
											"name": "week_end_date",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "week_end_date",
											"type": "DateTime",
											"physicalType": "date"
										}
									},
									{
										"source": {
											"name": "new_cases",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "new_cases",
											"type": "Int64",
											"physicalType": "bigint"
										}
									},
									{
										"source": {
											"name": "tests_done",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "tests_done",
											"type": "Int64",
											"physicalType": "bigint"
										}
									},
									{
										"source": {
											"name": "population",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "population",
											"type": "Int64",
											"physicalType": "bigint"
										}
									},
									{
										"source": {
											"name": "testing_data_source",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "testing_data_source",
											"type": "String",
											"physicalType": "varchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false,
									"dateFormat": "dd/mm/yyyy",
									"dateTimeFormat": "dd/mm/yyyy"
								}
							}
						},
						"inputs": [
							{
								"referenceName": "ds_adls_processed_ecdc_testing",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "ds_sql_testing",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "load"
				},
				"annotations": [],
				"lastPublishTime": "2025-03-28T08:40:59Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_adls_processed_ecdc_testing')]",
				"[concat(variables('factoryId'), '/datasets/ds_sql_testing')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_process_casesDeaths')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Transform Cases and Deaths",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "df_transform_casesDeaths",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"SourceCasesDeaths": {},
									"SourceCountryLookup": {},
									"SinkCasesDeaths": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "process"
				},
				"annotations": [],
				"lastPublishTime": "2025-03-28T08:40:58Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/df_transform_casesDeaths')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_process_hospitalAdmissions')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Transform Hospital Admissions",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "df_transform_hospitalAdmissions",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"SourceHospitalAdmissions": {},
									"SourceCoutryLookup": {},
									"SourceDateLookup": {},
									"SinkHospitalAdmissions": {},
									"SinkHospitalAdmissionsDaily": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "process"
				},
				"annotations": [],
				"lastPublishTime": "2025-03-28T08:40:58Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/df_transform_hospitalAdmissions')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_process_population')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Transform Population Data",
						"type": "DatabricksNotebook",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/covid/transformation/transform_population_data"
						},
						"linkedServiceName": {
							"referenceName": "ls_databricks_covid19",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "process"
				},
				"annotations": [],
				"lastPublishTime": "2025-03-28T08:40:58Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_databricks_covid19')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_process_testing')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Transform Testing Data",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "df_transform_testing",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"SourceTesting": {},
									"SourceCountryLookup": {},
									"SourceDimDate": {},
									"SinkTesting": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "process"
				},
				"annotations": [],
				"lastPublishTime": "2025-03-28T08:40:58Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/df_transform_testing')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_ablob_ecdcFileList')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_ablob_haicovid19blob",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "source"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "githubusercontent_ecdc_file_list.json",
						"container": "configs"
					}
				},
				"schema": {
					"type": "object",
					"properties": {
						"sourceBaseURL": {
							"type": "string"
						},
						"sourceRelativeURL": {
							"type": "string"
						},
						"sinkFileName": {
							"type": "string"
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_ablob_haicovid19blob')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_ablob_population')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_ablob_haicovid19blob",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "source"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "population_by_age.tsv.gz",
						"container": "population"
					},
					"columnDelimiter": "\t",
					"compressionCodec": "gzip",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_ablob_haicovid19blob')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_adls_countryLookup')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_adls_haicovid19datalake",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "lookup"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "country_lookup.csv",
						"fileSystem": "lookup"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "country",
						"type": "String"
					},
					{
						"name": "country_code_2_digit",
						"type": "String"
					},
					{
						"name": "country_code_3_digit",
						"type": "String"
					},
					{
						"name": "continent",
						"type": "String"
					},
					{
						"name": "population",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_adls_haicovid19datalake')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_adls_dimDate')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_adls_haicovid19datalake",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "lookup"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "dim_date.csv",
						"fileSystem": "lookup"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "date_key",
						"type": "String"
					},
					{
						"name": "full_date_alternate_key",
						"type": "String"
					},
					{
						"name": "year_num",
						"type": "String"
					},
					{
						"name": "year_quarter_num",
						"type": "String"
					},
					{
						"name": "quarter_num",
						"type": "String"
					},
					{
						"name": "quarter_txt",
						"type": "String"
					},
					{
						"name": "year_month_num",
						"type": "String"
					},
					{
						"name": "month_num",
						"type": "String"
					},
					{
						"name": "month_name",
						"type": "String"
					},
					{
						"name": "month_short_name",
						"type": "String"
					},
					{
						"name": "week_num_of_year",
						"type": "String"
					},
					{
						"name": "day_num_of_year",
						"type": "String"
					},
					{
						"name": "day_num_of_quarter",
						"type": "String"
					},
					{
						"name": "day_num_of_month",
						"type": "String"
					},
					{
						"name": "day_num_of_week",
						"type": "String"
					},
					{
						"name": "day_name",
						"type": "String"
					},
					{
						"name": "day_short_name",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_adls_haicovid19datalake')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_adls_processed_ecdc_casesDeaths')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_adls_haicovid19datalake",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "processed"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "ecdc/cases_deaths",
						"fileSystem": "processed"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_adls_haicovid19datalake')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_adls_processed_ecdc_hospitalAdmissionsDaily')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_adls_haicovid19datalake",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "processed"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "ecdc/hospital_admissions_daily",
						"fileSystem": "processed"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_adls_haicovid19datalake')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_adls_processed_ecdc_hospitalAdmissionsWeekly')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_adls_haicovid19datalake",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "processed"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "ecdc/hospital_admissions_weekly",
						"fileSystem": "processed"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_adls_haicovid19datalake')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_adls_processed_ecdc_testing')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_adls_haicovid19datalake",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "processed"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "ecdc/testing",
						"fileSystem": "processed"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_adls_haicovid19datalake')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_adls_raw_ecdc')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_adls_haicovid19datalake",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"fileName": {
						"type": "string",
						"defaultValue": "cases_deaths.csv"
					}
				},
				"folder": {
					"name": "raw"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().fileName",
							"type": "Expression"
						},
						"folderPath": "ecdc",
						"fileSystem": "raw"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_adls_haicovid19datalake')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_adls_raw_ecdc_casesDeaths')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_adls_haicovid19datalake",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "raw"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "cases_deaths.csv",
						"folderPath": "ecdc",
						"fileSystem": "raw"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "country",
						"type": "String"
					},
					{
						"name": "country_code",
						"type": "String"
					},
					{
						"name": "continent",
						"type": "String"
					},
					{
						"name": "population",
						"type": "String"
					},
					{
						"name": "indicator",
						"type": "String"
					},
					{
						"name": "daily_count",
						"type": "String"
					},
					{
						"name": "date",
						"type": "String"
					},
					{
						"name": "rate_14_day",
						"type": "String"
					},
					{
						"name": "source",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_adls_haicovid19datalake')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_adls_raw_ecdc_hospitalAdmissions')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_adls_haicovid19datalake",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "raw"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "hospital_admissions.csv",
						"folderPath": "ecdc",
						"fileSystem": "raw"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "country",
						"type": "String"
					},
					{
						"name": "indicator",
						"type": "String"
					},
					{
						"name": "date",
						"type": "String"
					},
					{
						"name": "year_week",
						"type": "String"
					},
					{
						"name": "value",
						"type": "String"
					},
					{
						"name": "source",
						"type": "String"
					},
					{
						"name": "url",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_adls_haicovid19datalake')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_adls_raw_ecdc_testing')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_adls_haicovid19datalake",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "raw"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "testing.csv",
						"folderPath": "ecdc",
						"fileSystem": "raw"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "country",
						"type": "String"
					},
					{
						"name": "country_code",
						"type": "String"
					},
					{
						"name": "year_week",
						"type": "String"
					},
					{
						"name": "new_cases",
						"type": "String"
					},
					{
						"name": "tests_done",
						"type": "String"
					},
					{
						"name": "population",
						"type": "String"
					},
					{
						"name": "testing_rate",
						"type": "String"
					},
					{
						"name": "positivity_rate",
						"type": "String"
					},
					{
						"name": "testing_data_source",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_adls_haicovid19datalake')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_adls_raw_population')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_adls_haicovid19datalake",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "raw"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "population_by_age.tsv",
						"folderPath": "population",
						"fileSystem": "raw"
					},
					"columnDelimiter": "\t",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_adls_haicovid19datalake')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_http_ecdc')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_http_ecdc",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"relativeUrl": {
						"type": "string",
						"defaultValue": "cloudboxacademy/covid19/main/ecdc_data/cases_deaths.csv"
					}
				},
				"folder": {
					"name": "source"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "HttpServerLocation",
						"relativeUrl": {
							"value": "@dataset().relativeUrl",
							"type": "Expression"
						}
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_http_ecdc')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_sql_casesDeaths')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_sql_covid19_db",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "sql"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "country",
						"type": "varchar"
					},
					{
						"name": "country_code_2_digit",
						"type": "varchar"
					},
					{
						"name": "country_code_3_digit",
						"type": "varchar"
					},
					{
						"name": "population",
						"type": "bigint",
						"precision": 19
					},
					{
						"name": "cases_count",
						"type": "bigint",
						"precision": 19
					},
					{
						"name": "deaths_count",
						"type": "bigint",
						"precision": 19
					},
					{
						"name": "reported_date",
						"type": "date"
					},
					{
						"name": "source",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "covid_reporting",
					"table": "cases_and_deaths"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_sql_covid19_db')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_sql_hospitalAdmissionsDaily')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_sql_covid19_db",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "sql"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "country",
						"type": "varchar"
					},
					{
						"name": "country_code_2_digit",
						"type": "varchar"
					},
					{
						"name": "country_code_3_digit",
						"type": "varchar"
					},
					{
						"name": "population",
						"type": "bigint",
						"precision": 19
					},
					{
						"name": "reported_date",
						"type": "date"
					},
					{
						"name": "hospital_occupancy_count",
						"type": "bigint",
						"precision": 19
					},
					{
						"name": "icu_occupancy_count",
						"type": "bigint",
						"precision": 19
					},
					{
						"name": "source",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "covid_reporting",
					"table": "hospital_admissions_daily"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_sql_covid19_db')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_sql_testing')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_sql_covid19_db",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "sql"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "country",
						"type": "varchar"
					},
					{
						"name": "country_code_2_digit",
						"type": "varchar"
					},
					{
						"name": "country_code_3_digit",
						"type": "varchar"
					},
					{
						"name": "year_week",
						"type": "varchar"
					},
					{
						"name": "week_start_date",
						"type": "date"
					},
					{
						"name": "week_end_date",
						"type": "date"
					},
					{
						"name": "new_cases",
						"type": "bigint",
						"precision": 19
					},
					{
						"name": "tests_done",
						"type": "bigint",
						"precision": 19
					},
					{
						"name": "population",
						"type": "bigint",
						"precision": 19
					},
					{
						"name": "testing_data_source",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "covid_reporting",
					"table": "testing"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_sql_covid19_db')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ls_ablob_haicovid19blob')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('ls_ablob_haicovid19blob_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ls_adls_haicovid19datalake')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('ls_adls_haicovid19datalake_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('ls_adls_haicovid19datalake_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ls_databricks_covid19')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureDatabricks",
				"typeProperties": {
					"domain": "https://adb-3244942890699788.8.azuredatabricks.net",
					"accessToken": {
						"type": "SecureString",
						"value": "[parameters('ls_databricks_covid19_accessToken')]"
					},
					"existingClusterId": "[parameters('ls_databricks_covid19_properties_typeProperties_existingClusterId')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ls_http_ecdc')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "HttpServer",
				"typeProperties": {
					"url": "[parameters('ls_http_ecdc_properties_typeProperties_url')]",
					"enableServerCertificateValidation": true,
					"authenticationType": "Anonymous"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ls_sql_covid19_db')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"server": "[parameters('ls_sql_covid19_db_properties_typeProperties_server')]",
					"database": "[parameters('ls_sql_covid19_db_properties_typeProperties_database')]",
					"encrypt": "mandatory",
					"trustServerCertificate": true,
					"authenticationType": "SQL",
					"userName": "[parameters('ls_sql_covid19_db_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('ls_sql_covid19_db_password')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/tr_event_blobCreated')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Stopped",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "pl_execute_population_pipeline",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "BlobEventsTrigger",
				"typeProperties": {
					"blobPathBeginsWith": "/population/blobs/population",
					"ignoreEmptyBlobs": true,
					"scope": "[parameters('tr_event_blobCreated_properties_typeProperties_scope')]",
					"events": [
						"Microsoft.Storage.BlobCreated"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/pl_execute_population_pipeline')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/tr_ingest_ecdc')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Started",
				"pipeline": {
					"pipelineReference": {
						"referenceName": "pl_ingest_ecdc_data",
						"type": "PipelineReference"
					},
					"parameters": {}
				},
				"type": "TumblingWindowTrigger",
				"typeProperties": {
					"frequency": "Hour",
					"interval": 24,
					"startTime": "2025-03-27T23:59:00Z",
					"delay": "00:00:00",
					"maxConcurrency": 50,
					"retryPolicy": {
						"intervalInSeconds": 30
					},
					"dependsOn": []
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/pl_ingest_ecdc_data')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/tr_process_casesDeaths')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Started",
				"pipeline": {
					"pipelineReference": {
						"referenceName": "pl_process_casesDeaths",
						"type": "PipelineReference"
					},
					"parameters": {}
				},
				"type": "TumblingWindowTrigger",
				"typeProperties": {
					"frequency": "Hour",
					"interval": 24,
					"startTime": "2025-03-27T23:59:00Z",
					"delay": "00:00:00",
					"maxConcurrency": 50,
					"retryPolicy": {
						"intervalInSeconds": 30
					},
					"dependsOn": [
						{
							"type": "TumblingWindowTriggerDependencyReference",
							"referenceTrigger": {
								"referenceName": "tr_ingest_ecdc",
								"type": "TriggerReference"
							}
						}
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/pl_process_casesDeaths')]",
				"[concat(variables('factoryId'), '/triggers/tr_ingest_ecdc')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/tr_process_hospitalAdmissions')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Started",
				"pipeline": {
					"pipelineReference": {
						"referenceName": "pl_process_hospitalAdmissions",
						"type": "PipelineReference"
					},
					"parameters": {}
				},
				"type": "TumblingWindowTrigger",
				"typeProperties": {
					"frequency": "Hour",
					"interval": 24,
					"startTime": "2025-03-27T23:59:00Z",
					"delay": "00:00:00",
					"maxConcurrency": 50,
					"retryPolicy": {
						"intervalInSeconds": 30
					},
					"dependsOn": [
						{
							"type": "TumblingWindowTriggerDependencyReference",
							"referenceTrigger": {
								"referenceName": "tr_ingest_ecdc",
								"type": "TriggerReference"
							}
						}
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/pl_process_hospitalAdmissions')]",
				"[concat(variables('factoryId'), '/triggers/tr_ingest_ecdc')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/tr_process_testing')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Started",
				"pipeline": {
					"pipelineReference": {
						"referenceName": "pl_process_testing",
						"type": "PipelineReference"
					},
					"parameters": {}
				},
				"type": "TumblingWindowTrigger",
				"typeProperties": {
					"frequency": "Hour",
					"interval": 24,
					"startTime": "2025-03-27T23:59:00Z",
					"delay": "00:00:00",
					"maxConcurrency": 50,
					"retryPolicy": {
						"intervalInSeconds": 30
					},
					"dependsOn": [
						{
							"type": "TumblingWindowTriggerDependencyReference",
							"referenceTrigger": {
								"referenceName": "tr_ingest_ecdc",
								"type": "TriggerReference"
							}
						}
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/pl_process_testing')]",
				"[concat(variables('factoryId'), '/triggers/tr_ingest_ecdc')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/tr_schedule_daily')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Stopped",
				"pipelines": [],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Day",
						"interval": 1,
						"startTime": "2025-03-21T09:09:00",
						"timeZone": "SE Asia Standard Time",
						"schedule": {
							"minutes": [
								59
							],
							"hours": [
								23
							]
						}
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/df_transform_casesDeaths')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "ds_adls_raw_ecdc_casesDeaths",
								"type": "DatasetReference"
							},
							"name": "SourceCasesDeaths"
						},
						{
							"dataset": {
								"referenceName": "ds_adls_countryLookup",
								"type": "DatasetReference"
							},
							"name": "SourceCountryLookup"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "ds_adls_processed_ecdc_casesDeaths",
								"type": "DatasetReference"
							},
							"name": "SinkCasesDeaths"
						}
					],
					"transformations": [
						{
							"name": "FilterEuropeOnly"
						},
						{
							"name": "SelectRequiredFields"
						},
						{
							"name": "PivotIndicator"
						},
						{
							"name": "LookupCountryCode"
						},
						{
							"name": "SelectForSink"
						}
					],
					"scriptLines": [
						"source(output(",
						"          country as string,",
						"          country_code as string,",
						"          continent as string,",
						"          population as integer,",
						"          indicator as string,",
						"          daily_count as integer,",
						"          date as date,",
						"          rate_14_day as double,",
						"          source as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> SourceCasesDeaths",
						"source(output(",
						"          country as string,",
						"          country_code_2_digit as string,",
						"          country_code_3_digit as string,",
						"          continent as string,",
						"          population as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> SourceCountryLookup",
						"SourceCasesDeaths filter(and(continent == \"Europe\", not(isNull(country_code)))) ~> FilterEuropeOnly",
						"FilterEuropeOnly select(mapColumn(",
						"          country,",
						"          country_code,",
						"          population,",
						"          indicator,",
						"          daily_count,",
						"          reported_date = date,",
						"          source",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> SelectRequiredFields",
						"SelectRequiredFields pivot(groupBy(country,",
						"          country_code,",
						"          population,",
						"          reported_date,",
						"          source),",
						"     pivotBy(indicator, ['confirmed cases', 'deaths']),",
						"     count = sum(daily_count),",
						"     columnNaming: '$V_$N',",
						"     lateral: true) ~> PivotIndicator",
						"PivotIndicator, SourceCountryLookup lookup(PivotIndicator@country == SourceCountryLookup@country,",
						"     multiple: false,",
						"     pickup: 'any',",
						"     broadcast: 'auto')~> LookupCountryCode",
						"LookupCountryCode select(mapColumn(",
						"          country = PivotIndicator@country,",
						"          country_code_2_digit,",
						"          country_code_3_digit,",
						"          population = PivotIndicator@population,",
						"          confirmed_cases_count = {confirmed cases_count},",
						"          deaths_count,",
						"          reported_date,",
						"          source",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> SelectForSink",
						"SelectForSink sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     truncate: true,",
						"     umask: 0022,",
						"     preCommands: [],",
						"     postCommands: [],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> SinkCasesDeaths"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_adls_raw_ecdc_casesDeaths')]",
				"[concat(variables('factoryId'), '/datasets/ds_adls_countryLookup')]",
				"[concat(variables('factoryId'), '/datasets/ds_adls_processed_ecdc_casesDeaths')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/df_transform_hospitalAdmissions')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "ds_adls_raw_ecdc_hospitalAdmissions",
								"type": "DatasetReference"
							},
							"name": "SourceHospitalAdmissions"
						},
						{
							"dataset": {
								"referenceName": "ds_adls_countryLookup",
								"type": "DatasetReference"
							},
							"name": "SourceCoutryLookup"
						},
						{
							"dataset": {
								"referenceName": "ds_adls_dimDate",
								"type": "DatasetReference"
							},
							"name": "SourceDateLookup"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "ds_adls_processed_ecdc_hospitalAdmissionsWeekly",
								"type": "DatasetReference"
							},
							"name": "SinkHospitalAdmissions"
						},
						{
							"dataset": {
								"referenceName": "ds_adls_processed_ecdc_hospitalAdmissionsDaily",
								"type": "DatasetReference"
							},
							"name": "SinkHospitalAdmissionsDaily"
						}
					],
					"transformations": [
						{
							"name": "LookupCountryCode"
						},
						{
							"name": "SelectRequiredFields"
						},
						{
							"name": "SplitDailyFromWeekly"
						},
						{
							"name": "DeriveYearWeek"
						},
						{
							"name": "AggDate"
						},
						{
							"name": "JoinWithDate"
						},
						{
							"name": "PivotWeekly"
						},
						{
							"name": "SortWeekly"
						},
						{
							"name": "SelectForWeeklySink"
						},
						{
							"name": "PivotDaily"
						},
						{
							"name": "SortDaily"
						},
						{
							"name": "SelectForDailySink"
						}
					],
					"scriptLines": [
						"source(output(",
						"          country as string,",
						"          indicator as string,",
						"          date as date,",
						"          year_week as string,",
						"          value as double,",
						"          source as string,",
						"          url as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> SourceHospitalAdmissions",
						"source(output(",
						"          country as string,",
						"          country_code_2_digit as string,",
						"          country_code_3_digit as string,",
						"          continent as string,",
						"          population as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> SourceCoutryLookup",
						"source(output(",
						"          date_key as string,",
						"          full_date_alternate_key as string,",
						"          year_num as integer,",
						"          year_quarter_num as string,",
						"          quarter_num as string,",
						"          quarter_txt as string,",
						"          year_month_num as string,",
						"          month_num as integer,",
						"          month_name as string,",
						"          month_short_name as string,",
						"          week_num_of_year as integer,",
						"          day_num_of_year as string,",
						"          day_num_of_quarter as string,",
						"          day_num_of_month as string,",
						"          day_num_of_week as string,",
						"          day_name as string,",
						"          day_short_name as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> SourceDateLookup",
						"SourceHospitalAdmissions, SourceCoutryLookup lookup(SourceHospitalAdmissions@country == SourceCoutryLookup@country,",
						"     multiple: false,",
						"     pickup: 'any',",
						"     broadcast: 'auto')~> LookupCountryCode",
						"LookupCountryCode select(mapColumn(",
						"          country = SourceHospitalAdmissions@country,",
						"          country_code_2_digit,",
						"          country_code_3_digit,",
						"          population,",
						"          indicator,",
						"          value,",
						"          reported_date = date,",
						"          reported_year_week = year_week,",
						"          source",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> SelectRequiredFields",
						"SelectRequiredFields split(indicator == \"Weekly new hospital admissions per 100k\" || indicator == \"Weekly new ICU admissions per 100k\",",
						"     disjoint: false) ~> SplitDailyFromWeekly@(WeeklyData, DailyData)",
						"SourceDateLookup derive(iso_year_week = toString(iif(and(week_num_of_year == 1, month_num == 12), year_num + 1,\r",
						"iif(and(week_num_of_year >= 52, month_num == 1), year_num - 1,\r",
						"year_num))) + \"-W\" + lpad(toString(week_num_of_year),2,\"0\")) ~> DeriveYearWeek",
						"DeriveYearWeek aggregate(groupBy(iso_year_week),",
						"     week_start_date = min(full_date_alternate_key),",
						"          week_end_date = max(full_date_alternate_key)) ~> AggDate",
						"SplitDailyFromWeekly@WeeklyData, AggDate join(reported_year_week == iso_year_week,",
						"     joinType:'left',",
						"     matchType:'exact',",
						"     ignoreSpaces: false,",
						"     broadcast: 'auto')~> JoinWithDate",
						"JoinWithDate pivot(groupBy(country,",
						"          country_code_2_digit,",
						"          country_code_3_digit,",
						"          population,",
						"          reported_date,",
						"          reported_year_week,",
						"          source,",
						"          iso_year_week,",
						"          week_start_date,",
						"          week_end_date),",
						"     pivotBy(indicator, ['Weekly new ICU admissions per 100k', 'Weekly new hospital admissions per 100k']),",
						"     count = sum(value),",
						"     columnNaming: '$V_$N',",
						"     lateral: true) ~> PivotWeekly",
						"PivotWeekly sort(asc(country, true),",
						"     desc(reported_year_week, true)) ~> SortWeekly",
						"SortWeekly select(mapColumn(",
						"          country,",
						"          country_code_2_digit,",
						"          country_code_3_digit,",
						"          population,",
						"          new_icu_admissions_count = {Weekly new ICU admissions per 100k_count},",
						"          new_hospital_admissions_count = {Weekly new hospital admissions per 100k_count},",
						"          reported_year_week,",
						"          week_start_date,",
						"          week_end_date,",
						"          source",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> SelectForWeeklySink",
						"SplitDailyFromWeekly@DailyData pivot(groupBy(country,",
						"          country_code_2_digit,",
						"          country_code_3_digit,",
						"          population,",
						"          reported_year_week,",
						"          reported_date,",
						"          source),",
						"     pivotBy(indicator, ['Daily hospital occupancy', 'Daily ICU occupancy']),",
						"     count = sum(value),",
						"     columnNaming: '$V_$N',",
						"     lateral: true) ~> PivotDaily",
						"PivotDaily sort(asc(country, true),",
						"     desc(reported_date, true)) ~> SortDaily",
						"SortDaily select(mapColumn(",
						"          country,",
						"          country_code_2_digit,",
						"          country_code_3_digit,",
						"          population,",
						"          hospital_occupancy_count = {Daily hospital occupancy_count},",
						"          icu_occupancy_count = {Daily ICU occupancy_count},",
						"          reported_date,",
						"          source",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> SelectForDailySink",
						"SelectForWeeklySink sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     umask: 0022,",
						"     preCommands: [],",
						"     postCommands: [],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> SinkHospitalAdmissions",
						"SelectForDailySink sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     truncate: true,",
						"     umask: 0022,",
						"     preCommands: [],",
						"     postCommands: [],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> SinkHospitalAdmissionsDaily"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_adls_raw_ecdc_hospitalAdmissions')]",
				"[concat(variables('factoryId'), '/datasets/ds_adls_countryLookup')]",
				"[concat(variables('factoryId'), '/datasets/ds_adls_dimDate')]",
				"[concat(variables('factoryId'), '/datasets/ds_adls_processed_ecdc_hospitalAdmissionsWeekly')]",
				"[concat(variables('factoryId'), '/datasets/ds_adls_processed_ecdc_hospitalAdmissionsDaily')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/df_transform_testing')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "ds_adls_raw_ecdc_testing",
								"type": "DatasetReference"
							},
							"name": "SourceTesting"
						},
						{
							"dataset": {
								"referenceName": "ds_adls_countryLookup",
								"type": "DatasetReference"
							},
							"name": "SourceCountryLookup"
						},
						{
							"dataset": {
								"referenceName": "ds_adls_dimDate",
								"type": "DatasetReference"
							},
							"name": "SourceDimDate"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "ds_adls_processed_ecdc_testing",
								"type": "DatasetReference"
							},
							"name": "SinkTesting"
						}
					],
					"transformations": [
						{
							"name": "DeriveISOYearWeek"
						},
						{
							"name": "AggDate"
						},
						{
							"name": "LookupCountries"
						},
						{
							"name": "LookupDate"
						},
						{
							"name": "SelectRequiredFields"
						},
						{
							"name": "SortFields"
						}
					],
					"scriptLines": [
						"source(output(",
						"          country as string,",
						"          country_code as string,",
						"          year_week as string,",
						"          new_cases as string,",
						"          tests_done as string,",
						"          population as string,",
						"          testing_rate as string,",
						"          positivity_rate as string,",
						"          testing_data_source as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> SourceTesting",
						"source(output(",
						"          country as string,",
						"          country_code_2_digit as string,",
						"          country_code_3_digit as string,",
						"          continent as string,",
						"          population as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> SourceCountryLookup",
						"source(output(",
						"          date_key as string,",
						"          full_date_alternate_key as string,",
						"          year_num as integer,",
						"          year_quarter_num as string,",
						"          quarter_num as string,",
						"          quarter_txt as string,",
						"          year_month_num as string,",
						"          month_num as integer,",
						"          month_name as string,",
						"          month_short_name as string,",
						"          week_num_of_year as integer,",
						"          day_num_of_year as string,",
						"          day_num_of_quarter as string,",
						"          day_num_of_month as string,",
						"          day_num_of_week as string,",
						"          day_name as string,",
						"          day_short_name as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> SourceDimDate",
						"SourceDimDate derive(iso_year_week = toString(iif(and(week_num_of_year == 1, month_num == 12), year_num + 1,iif(and(week_num_of_year >= 52, month_num == 1), year_num - 1,year_num))) + \"-W\" + lpad(toString(week_num_of_year),2,\"0\")) ~> DeriveISOYearWeek",
						"DeriveISOYearWeek aggregate(groupBy(iso_year_week),",
						"     week_start_date = min(full_date_alternate_key),",
						"          week_end_date = max(full_date_alternate_key)) ~> AggDate",
						"SourceTesting, SourceCountryLookup lookup(SourceTesting@country == SourceCountryLookup@country,",
						"     multiple: false,",
						"     pickup: 'any',",
						"     broadcast: 'auto')~> LookupCountries",
						"LookupCountries, AggDate lookup(year_week == iso_year_week,",
						"     multiple: false,",
						"     pickup: 'any',",
						"     broadcast: 'auto')~> LookupDate",
						"LookupDate select(mapColumn(",
						"          country = SourceTesting@country,",
						"          country_code_2_digit,",
						"          country_code_3_digit,",
						"          reported_year_week = year_week,",
						"          week_start_date,",
						"          week_end_date,",
						"          new_cases,",
						"          tests_done,",
						"          population = SourceTesting@population,",
						"          testing_rate,",
						"          positivity_rate,",
						"          testing_data_source",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> SelectRequiredFields",
						"SelectRequiredFields sort(asc(country, true),",
						"     desc(reported_year_week, true)) ~> SortFields",
						"SortFields sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     umask: 0022,",
						"     preCommands: [],",
						"     postCommands: [],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> SinkTesting"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_adls_raw_ecdc_testing')]",
				"[concat(variables('factoryId'), '/datasets/ds_adls_countryLookup')]",
				"[concat(variables('factoryId'), '/datasets/ds_adls_dimDate')]",
				"[concat(variables('factoryId'), '/datasets/ds_adls_processed_ecdc_testing')]"
			]
		}
	]
}